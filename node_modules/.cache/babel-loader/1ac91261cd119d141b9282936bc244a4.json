{"ast":null,"code":"import _slicedToArray from \"/Users/michaeldoho/Documents/Dev/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/michaeldoho/Documents/Dev/portfolio/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/michaeldoho/Documents/Dev/portfolio/src/components/ToggleButton.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  background: #363d67;\\n  height: 8vh;\\n  width: 10vw;\\n  font-size: 1em;\\n  color: white;\\n  position: relative;\\n  bottom: 150px;\\n  left: 100px;\\n\\n  @media (max-width: 680px) {\\n    bottom: 112px;\\n    left: 48px;\\n  }\\n\\n  @media (max-width: 500px) {\\n    font-size: 0.7em;\\n  }\\n\\n  @media (max-width: 400px) {\\n    font-size: 0.5em;\\n  }\\n\\n  :hover {\\n    -webkit-transition: 0.5s ease;\\n    transition: 0.5s ease;\\n    background: aqua;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nvar Button = styled.button(_templateObject()); // toggles show or hide of modal\n\nvar ToggleButton = function ToggleButton(_ref) {\n  var buttonImage = _ref.buttonImage,\n      buttonTitle = _ref.buttonTitle,\n      children = _ref.children;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isShown = _useState2[0],\n      setIsShown = _useState2[1];\n\n  var hide = function hide() {\n    return setIsShown(false);\n  };\n\n  var show = function show() {\n    return setIsShown(true);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"App__projects__case__chest\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"App__projects__case__chest__demo1\",\n    src: buttonImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: show,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, buttonTitle)), isShown && children ? children(hide) : null);\n};\n\nToggleButton.defaultProps = {\n  buttonTitle: \"Learn More\"\n};\nexport default ToggleButton;","map":{"version":3,"sources":["/Users/michaeldoho/Documents/Dev/portfolio/src/components/ToggleButton.js"],"names":["React","useState","styled","Button","button","ToggleButton","buttonImage","buttonTitle","children","isShown","setIsShown","hide","show","defaultProps"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,MAAM,GAAGD,MAAM,CAACE,MAAV,mBAAZ,C,CA8BA;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAA4C;AAAA,MAAzCC,WAAyC,QAAzCA,WAAyC;AAAA,MAA5BC,WAA4B,QAA5BA,WAA4B;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACjCP,QAAQ,CAAC,KAAD,CADyB;AAAA;AAAA,MACxDQ,OADwD;AAAA,MAC/CC,UAD+C;;AAE/D,MAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,WAAMD,UAAU,CAAC,KAAD,CAAhB;AAAA,GAAb;;AACA,MAAME,IAAI,GAAG,SAAPA,IAAO;AAAA,WAAMF,UAAU,CAAC,IAAD,CAAhB;AAAA,GAAb;;AAEA,SACE,0CACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAmD,IAAA,GAAG,EAAEJ,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEM,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBL,WAAxB,CAFF,CADF,EAKGE,OAAO,IAAID,QAAX,GAAsBA,QAAQ,CAACG,IAAD,CAA9B,GAAuC,IAL1C,CADF;AASD,CAdD;;AAgBAN,YAAY,CAACQ,YAAb,GAA4B;AAC1BN,EAAAA,WAAW,EAAE;AADa,CAA5B;AAIA,eAAeF,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n  background: #363d67;\n  height: 8vh;\n  width: 10vw;\n  font-size: 1em;\n  color: white;\n  position: relative;\n  bottom: 150px;\n  left: 100px;\n\n  @media (max-width: 680px) {\n    bottom: 112px;\n    left: 48px;\n  }\n\n  @media (max-width: 500px) {\n    font-size: 0.7em;\n  }\n\n  @media (max-width: 400px) {\n    font-size: 0.5em;\n  }\n\n  :hover {\n    -webkit-transition: 0.5s ease;\n    transition: 0.5s ease;\n    background: aqua;\n  }\n`;\n\n// toggles show or hide of modal\n\nconst ToggleButton = ({ buttonImage, buttonTitle, children }) => {\n  const [isShown, setIsShown] = useState(false);\n  const hide = () => setIsShown(false);\n  const show = () => setIsShown(true);\n\n  return (\n    <>\n      <div className=\"App__projects__case__chest\">\n        <img className=\"App__projects__case__chest__demo1\" src={buttonImage} />\n        <Button onClick={show}>{buttonTitle}</Button>\n      </div>\n      {isShown && children ? children(hide) : null}\n    </>\n  );\n};\n\nToggleButton.defaultProps = {\n  buttonTitle: \"Learn More\"\n};\n\nexport default ToggleButton;\n"]},"metadata":{},"sourceType":"module"}